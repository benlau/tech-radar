"use strict";(self.webpackChunk_benlau_tech_radar=self.webpackChunk_benlau_tech_radar||[]).push([[105],{"./stories/TechRadar.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BasicRadar:()=>BasicRadar,HorizonalRadar:()=>HorizonalRadar,ScaleToFitRadar:()=>ScaleToFitRadar,VerticalRadar:()=>VerticalRadar,__namedExportsOrder:()=>__namedExportsOrder,default:()=>TechRadar_stories});var src=__webpack_require__("./node_modules/d3/src/index.js");class Helper{static radians(degrees){return degrees*Math.PI/180}static generateNumberFromString(str){let hash=0;for(let i=0;i<str.length;i++){hash=(hash<<5)-hash+str.charCodeAt(i),hash|=0}return(2147483647&hash)/2147483647}static limitRange(value,min,max){return(max-min)*value+min}}const TechRadarScaleMode={none:"none",scaleToFit:"scaleToFit"};class TechRadar{config;blipItems;_layout;chart;static getDefaultConfig(){return{canvasSize:{width:800,height:800},strokeWidth:2,strokeColour:"#fff",categoryColor:"#444",categoryVisble:!0,blipColor:"#5f5f5f",blipHoverColor:"#5f5f5f7f",blipFontSize:16,blipPointSize:2,blipLabelOffset:5,scaleMode:"none",statusLabelPosition:"up",statusLabelVisible:!0,centerOffset:{x:0,y:0},statuses:[{name:"no-go",color:"#d8e5ee",length:60},{name:"hold",color:"#c1d8e8",length:60},{name:"assess",color:"#afcadd",length:60},{name:"trial",color:"#9ebcd6",length:60},{name:"adopt",color:"#8eafd2",length:60}],categories:["platform & frameworks","tools","techniques","languages"],statusLabelWidth:72,statusLabelHeight:24,statusLabelRadius:5,statusLabelFontSize:14,statusLabelColor:"#7f7f7f",statusLabelBackgroundColor:"white"}}constructor(blipItems,config){this.config=config||TechRadar.getDefaultConfig(),this.blipItems=blipItems||[],this._layout={radarItems:[],statusLabelRect:[]},this.chart=void 0,this._createLayout()}getChartRadius(){return this.config.statuses.reduce(((s,item)=>item.length+s),0)}getCenterPoint(){return{x:this.config.canvasSize.width/2+this.config.centerOffset.x,y:this.config.canvasSize.height/2+this.config.centerOffset.y}}_getStatusPositionByString(status){return this.config.statuses.findIndex((element=>element.name===status))}_getStatusRadiusByIndex(index){if(index>this.config.statuses.length)return 0;const totalRadius=this.getChartRadius();let invRadius=0;for(let i=0;i<index;i++)invRadius+=this.config.statuses[i].length;return totalRadius-invRadius}_getStatusRadiusMinMaxByIndex(index){const max=this._getStatusRadiusByIndex(index);return{min:this._getStatusRadiusByIndex(index+1),max}}_getCategoryPositionByString(category){return this.config.categories.findIndex((element=>element===category))}_getTechnologyPositionByString(technology){return this.blipItems.findIndex((element=>element.name===technology))}_getRadiansPerCategory(){return Helper.radians(360/this.config.categories.length)}_createLayout(){const centerPoint=this.getCenterPoint(),radarItems=this.blipItems.map((d=>{const angle=this._getRadiansPerCategory()*(this._getCategoryPositionByString(d.category)+(null!=d.angle?d.angle:Helper.limitRange(Helper.generateNumberFromString(d.name+"_agree"),.1,.9))),statusPosition=this._getStatusPositionByString(d.status),{min,max}=this._getStatusRadiusMinMaxByIndex(statusPosition),radius=min+(max-min)*(null!=d.radius?d.radius:Helper.limitRange(Helper.generateNumberFromString(d.name+"_radius"),.1,.9)),x=radius*Math.cos(angle)+centerPoint.x,y=radius*Math.sin(angle)+centerPoint.y;return{...d,x,y,radius}})),statusLabelRect=this.config.statuses.map(((status,i)=>{const cx=centerPoint.x,cy=centerPoint.y,{min,max}=this._getStatusRadiusMinMaxByIndex(i),midpoint=(min+max)/2;switch(this.config.statusLabelPosition){case"up":return{x:cx-this.config.statusLabelWidth/2,y:cy-midpoint-this.config.statusLabelHeight/2,width:this.config.statusLabelWidth,height:this.config.statusLabelHeight,name:status.name};case"down":return{x:cx-this.config.statusLabelWidth/2,y:cy+midpoint-this.config.statusLabelHeight/2,width:this.config.statusLabelWidth,height:this.config.statusLabelHeight,name:status.name};case"left":return{x:cx-midpoint-this.config.statusLabelWidth/2,y:cy-this.config.statusLabelHeight/2,width:this.config.statusLabelWidth,height:this.config.statusLabelHeight,name:status.name};case"right":return{x:cx+midpoint-this.config.statusLabelWidth/2,y:cy-this.config.statusLabelHeight/2,width:this.config.statusLabelWidth,height:this.config.statusLabelHeight,name:status.name};default:return null}})).filter((rect=>null!==rect));this._layout={radarItems,statusLabelRect}}render(elem){const container=src.Ltv(elem);let radar;radar="scaleToFit"===this.config.scaleMode?container.append("svg").attr("preserveAspectRatio","xMidYMid meet").attr("viewBox",`0 0 ${this.config.canvasSize.width} ${this.config.canvasSize.height}`).attr("width",null).attr("height",null):container.append("svg").attr("width",this.config.canvasSize.width).attr("height",this.config.canvasSize.height),this._drawCircles(radar),this._drawAxes(radar),this._drawStatusLabels(radar),this._drawRadarItems(radar),this.drawCategoryLabels(radar),this.chart=radar}_drawCircles(radar){const centerPoint=this.getCenterPoint();radar.selectAll("circle").data(this.config.statuses).enter().append("circle").attr("stroke",this.config.strokeColour).attr("stroke-width",this.config.strokeWidth).attr("fill",(d=>d.color)).attr("r",((d,i)=>this._getStatusRadiusByIndex(i))).attr("cx",centerPoint.x).attr("cy",centerPoint.y)}_drawAxes(radar){const centerPoint=this.getCenterPoint();radar.selectAll("line").data(this.config.categories).enter().append("line").attr("x1",((data,i)=>{const deg=360/this.config.categories.length*i,radius=this.getChartRadius();return centerPoint.x+radius*Math.cos(deg*Math.PI/180)})).attr("y1",((data,i)=>{const deg=360/this.config.categories.length*i,radius=this.getChartRadius();return centerPoint.y+radius*Math.sin(deg*Math.PI/180)})).attr("x2",centerPoint.x).attr("y2",centerPoint.y).attr("stroke",this.config.strokeColour).attr("stroke-width",this.config.strokeWidth)}_drawStatusLabels(radar){this.config.statusLabelVisible&&(radar.selectAll("rect").data(this._layout.statusLabelRect).enter().append("rect").attr("x",(data=>data.x)).attr("y",(data=>data.y)).attr("height",(data=>data.height)).attr("width",(data=>data.width)).attr("fill",this.config.statusLabelBackgroundColor).attr("rx",this.config.statusLabelRadius),radar.selectAll("text").data(this._layout.statusLabelRect).enter().append("text").text((data=>data.name.toUpperCase())).attr("text-anchor","middle").attr("dominant-baseline","central").attr("x",(d=>d.x+d.width/2)).attr("y",(d=>d.y+d.height/2)).attr("fill",this.config.statusLabelColor).attr("font-size",this.config.statusLabelFontSize))}_drawRadarItems(radar){const techItems=this._layout.radarItems,points=radar.append("g"),instance=this,techItemGroups=points.selectAll(".discovery-item").data(techItems).enter().append("g").attr("class","tech-item").style("cursor","pointer").on("mouseover",(function(){src.Ltv(this).select("text").attr("fill",instance.config.blipHoverColor),src.Ltv(this).select("circle").attr("fill",instance.config.blipHoverColor)})).on("mouseout",(function(){src.Ltv(this).select("text").attr("fill",instance.config.blipColor),src.Ltv(this).select("circle").attr("fill",instance.config.blipColor)})).on("click",(function(event,d){d?.onClick?.(d)}));techItemGroups.append("text").text((d=>d.name.toUpperCase())).attr("fill",this.config.blipColor).attr("font-size",this.config.blipFontSize).attr("x",(d=>(d.x||0)+this.config.blipLabelOffset)).attr("y",(d=>(d.y||0)+this.config.blipLabelOffset)),techItemGroups.append("circle").attr("fill",this.config.blipColor).attr("r",this.config.blipPointSize).attr("cx",(d=>d.x||0)).attr("cy",(d=>d.y||0))}drawCategoryLabels(radar){if(!this.config.categoryVisble)return;const centerPoint=this.getCenterPoint();radar.selectAll(".category-label").data(this.config.categories).enter().append("text").attr("text-anchor","middle").attr("dominant-baseline","central").attr("class","category-label").attr("fill",this.config.categoryColor).text((d=>d.toUpperCase())).attr("x",(d=>{const radiansPerCategory=this._getRadiansPerCategory(),angle=radiansPerCategory*this._getCategoryPositionByString(d)+radiansPerCategory/2;return this.config.canvasSize.width/2*Math.cos(angle)+centerPoint.x})).attr("y",(d=>{const radiansPerCategory=this._getRadiansPerCategory(),angle=radiansPerCategory*this._getCategoryPositionByString(d)+radiansPerCategory/2;return this.config.canvasSize.height/2*Math.sin(angle)+centerPoint.y}))}toSVG(){return this.chart?.attr("title","Tech Radar").attr("version",1.1).attr("xmlns","http://www.w3.org/2000/svg").node()?.parentNode?.innerHTML||""}downloadSVG(){try{new Blob}catch(e){return void alert("blob not supported")}const svgData=this.toSVG(),svgBlob=new Blob(['<?xml version="1.0" standalone="no"?>\r\n',svgData],{type:"image/svg+xml;charset=utf-8"}),svgUrl=URL.createObjectURL(svgBlob),downloadLink=document.createElement("a");downloadLink.href=svgUrl,downloadLink.download="tech_radar.svg",downloadLink.style.display="none",document.body.appendChild(downloadLink),downloadLink.click(),document.body.removeChild(downloadLink),URL.revokeObjectURL(svgUrl)}}const createTechRadar=({blipItems,config})=>{const container=document.createElement("div");container.style.display="flex",container.style.flexDirection="column",container.style.gap="10px",container.style.width="100vw",container.style.height="90vh";const placeholder=document.createElement("div");return new TechRadar(blipItems,config).render(placeholder),container.appendChild(placeholder),container},FULL_BLIP_ITEMS=[{name:"Noteful",category:"tools",status:"adopt",angle:.7,radius:.9},{name:"Exxxnote",category:"tools",status:"no-go",angle:.8},{name:"Foam",category:"tools",status:"trial"},{name:"Bun",category:"platform & frameworks",status:"assess"},{name:"Web Component",category:"platform & frameworks",status:"hold"},{name:"ray",category:"languages",status:"trial",angle:.8},{name:"RAG",category:"techniques",status:"trial",radius:.9}],TechRadar_stories={title:"Tech Radar",render:args=>createTechRadar(args),parameters:{layout:"fullscreen"}},BasicRadar={args:{blipItems:FULL_BLIP_ITEMS,config:TechRadar.getDefaultConfig()},render:args=>createTechRadar(args)},ScaleToFitRadar={args:{blipItems:FULL_BLIP_ITEMS,scaleMode:TechRadarScaleMode.scaleToFit},argTypes:{scaleMode:{control:"select",options:Object.values(TechRadarScaleMode)}},render:args=>{const config=TechRadar.getDefaultConfig();return createTechRadar({...args,config:{...config,scaleMode:args.scaleMode}})}},HorizonalRadar={args:{blipItems:[{name:"adopt",category:"platform & frameworks",status:"adopt"},{name:"trial",category:"platform & frameworks",status:"trial"},{name:"no-go",category:"platform & frameworks",status:"no-go",angle:.1,radius:.5},{name:"assess",category:"platform & frameworks",status:"assess"},{name:"hold",category:"platform & frameworks",status:"hold",angle:.2,radius:.4}]},render:args=>{const config=TechRadar.getDefaultConfig();config.canvasSize={width:600,height:200},config.scaleMode="scaleToFit",config.statuses=[{name:"no-go",color:"#d8e5ee",length:100},{name:"hold",color:"#c1d8e8",length:100},{name:"assess",color:"#afcadd",length:100},{name:"trial",color:"#9ebcd6",length:100},{name:"adopt",color:"#8eafd2",length:100}],config.statusLabelPosition="right",config.centerOffset={x:-300,y:-70},config.statusLabelVisible=!0,config.categoryVisble=!1;return createTechRadar({...args,config})}},VerticalRadar={args:{blipItems:[{name:"adopt",category:"platform & frameworks",status:"adopt"},{name:"trial",category:"platform & frameworks",status:"trial"},{name:"no-go",category:"platform & frameworks",status:"no-go",angle:.9,radius:.5},{name:"assess",category:"platform & frameworks",status:"assess",angle:.8},{name:"hold",category:"platform & frameworks",status:"hold",angle:.8,radius:.4}]},render:args=>{const config=TechRadar.getDefaultConfig();config.scaleMode="scaleToFit",config.canvasSize={width:400,height:600},config.statuses=[{name:"no-go",color:"#d8e5ee",length:100},{name:"hold",color:"#c1d8e8",length:100},{name:"assess",color:"#afcadd",length:100},{name:"trial",color:"#9ebcd6",length:100},{name:"adopt",color:"#8eafd2",length:100}],config.categories=["platform & frameworks","tools & methodology","productivity","AI & ML"],config.statusLabelPosition="down",config.centerOffset={x:-150,y:-320},config.categoryVisble=!1;return createTechRadar({...args,config})}},__namedExportsOrder=["BasicRadar","ScaleToFitRadar","HorizonalRadar","VerticalRadar"];BasicRadar.parameters={...BasicRadar.parameters,docs:{...BasicRadar.parameters?.docs,source:{originalSource:"{\n  args: {\n    blipItems: FULL_BLIP_ITEMS,\n    config: TechRadar.getDefaultConfig()\n  },\n  render: args => {\n    const container = createTechRadar(args);\n    return container;\n  }\n}",...BasicRadar.parameters?.docs?.source}}},ScaleToFitRadar.parameters={...ScaleToFitRadar.parameters,docs:{...ScaleToFitRadar.parameters?.docs,source:{originalSource:'{\n  args: {\n    blipItems: FULL_BLIP_ITEMS,\n    scaleMode: TechRadarScaleMode.scaleToFit\n  },\n  argTypes: {\n    scaleMode: {\n      control: "select",\n      options: Object.values(TechRadarScaleMode)\n    }\n  },\n  render: args => {\n    const config = TechRadar.getDefaultConfig();\n    const container = createTechRadar({\n      ...args,\n      config: {\n        ...config,\n        scaleMode: args.scaleMode\n      }\n    });\n    return container;\n  }\n}',...ScaleToFitRadar.parameters?.docs?.source}}},HorizonalRadar.parameters={...HorizonalRadar.parameters,docs:{...HorizonalRadar.parameters?.docs,source:{originalSource:'{\n  args: {\n    blipItems: [{\n      name: "adopt",\n      category: "platform & frameworks",\n      status: "adopt"\n    }, {\n      name: "trial",\n      category: "platform & frameworks",\n      status: "trial"\n    }, {\n      name: "no-go",\n      category: "platform & frameworks",\n      status: "no-go",\n      angle: 0.1,\n      radius: 0.5\n    }, {\n      name: "assess",\n      category: "platform & frameworks",\n      status: "assess"\n    }, {\n      name: "hold",\n      category: "platform & frameworks",\n      status: "hold",\n      angle: 0.2,\n      radius: 0.4\n    }]\n  },\n  render: args => {\n    const config = TechRadar.getDefaultConfig();\n    config.canvasSize = {\n      width: 600,\n      height: 200\n    };\n    config.scaleMode = "scaleToFit";\n    config.statuses = [{\n      name: "no-go",\n      color: "#d8e5ee",\n      length: 100\n    },\n    // 60\n    {\n      name: "hold",\n      color: "#c1d8e8",\n      length: 100\n    }, {\n      name: "assess",\n      color: "#afcadd",\n      length: 100\n    }, {\n      name: "trial",\n      color: "#9ebcd6",\n      length: 100\n    }, {\n      name: "adopt",\n      color: "#8eafd2",\n      length: 100\n    }];\n    config.statusLabelPosition = "right";\n    config.centerOffset = {\n      x: -300,\n      y: -70\n    };\n    config.statusLabelVisible = true;\n    config.categoryVisble = false;\n    const container = createTechRadar({\n      ...args,\n      config\n    });\n    return container;\n  }\n}',...HorizonalRadar.parameters?.docs?.source}}},VerticalRadar.parameters={...VerticalRadar.parameters,docs:{...VerticalRadar.parameters?.docs,source:{originalSource:'{\n  args: {\n    blipItems: [{\n      name: "adopt",\n      category: "platform & frameworks",\n      status: "adopt"\n    }, {\n      name: "trial",\n      category: "platform & frameworks",\n      status: "trial"\n    }, {\n      name: "no-go",\n      category: "platform & frameworks",\n      status: "no-go",\n      angle: 0.9,\n      radius: 0.5\n    }, {\n      name: "assess",\n      category: "platform & frameworks",\n      status: "assess",\n      angle: 0.8\n    }, {\n      name: "hold",\n      category: "platform & frameworks",\n      status: "hold",\n      angle: 0.8,\n      radius: 0.4\n    }]\n  },\n  render: args => {\n    const config = TechRadar.getDefaultConfig();\n    config.scaleMode = "scaleToFit";\n    config.canvasSize = {\n      width: 400,\n      height: 600\n    };\n    config.statuses = [{\n      name: "no-go",\n      color: "#d8e5ee",\n      length: 100\n    },\n    // 60\n    {\n      name: "hold",\n      color: "#c1d8e8",\n      length: 100\n    }, {\n      name: "assess",\n      color: "#afcadd",\n      length: 100\n    }, {\n      name: "trial",\n      color: "#9ebcd6",\n      length: 100\n    }, {\n      name: "adopt",\n      color: "#8eafd2",\n      length: 100\n    }];\n    config.categories = ["platform & frameworks", "tools & methodology", "productivity", "AI & ML"];\n    config.statusLabelPosition = "down";\n    config.centerOffset = {\n      x: -150,\n      y: -320\n    };\n    config.categoryVisble = false;\n    const container = createTechRadar({\n      ...args,\n      config\n    });\n    return container;\n  }\n}',...VerticalRadar.parameters?.docs?.source}}}}}]);